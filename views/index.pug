doctype html
html.no-js(lang='')
  head
    meta(charset='utf-8')
    meta(http-equiv='x-ua-compatible', content='ie=edge')
    title
    meta(name='description', content='')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='apple-touch-icon', href='apple-touch-icon.png')
    // Place favicon.ico in the root directory
    link(href='https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/css/materialize.min.css', type='text/css', rel='stylesheet', media='screen,projection')
    link(href='https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css', rel='stylesheet')
    link(href='css/style.css', type='text/css', rel='stylesheet', media='screen,projection')
  body
    //
      if lt IE 8
      p.browserupgrade
      | You are using an
      strong outdated
      |  browser. Please
      a(href='http://browsehappy.com/') upgrade your browser
      |  to improve your experience.
    // Add your site or application content here
    p Hello world! This is HTML5 Boilerplate.
    form(action='/search', method='post')
      .form-group
        label URL
        input.form-control(type='text', name='URL')
        button.btn.cyan.btn-warning.btn-lg(type='submit') Search
    // Google Analytics: change UA-XXXXX-X to be your site's ID.
    script(src='https://code.jquery.com/jquery-2.1.1.min.js')
    script(src='js/materialize.js')
    script(src='js/init.js')
    html
  body
    .container
      #login
        a.btn.btn-primary(href='/login') Log in with Spotify
      #loggedin
        #user-profile
        #oauth
        button#obtain-new-token.btn.btn-default Obtain new token using the refresh token
    script#user-profile-template(type='text/x-handlebars-template').
      <h1>Logged in as {{display_name}}</h1>
      <div class="media">
      <div class="pull-left">
      <img class="media-object" width="150" src="{{images.0.url}}" />
      </div>
      <div class="media-body">
      <dl class="dl-horizontal">
      <dt>Display name</dt><dd class="clearfix">{{display_name}}</dd>
      <dt>Id</dt><dd>{{id}}</dd>
      <dt>Email</dt><dd>{{email}}</dd>
      <dt>Spotify URI</dt><dd><a href="{{external_urls.spotify}}">{{external_urls.spotify}}</a></dd>
      <dt>Link</dt><dd><a href="{{href}}">{{href}}</a></dd>
      <dt>Profile Image</dt><dd class="clearfix"><a href="{{images.0.url}}">{{images.0.url}}</a></dd>
      <dt>Country</dt><dd>{{country}}</dd>
      </dl>
      </div>
      </div>
    script#oauth-template(type='text/x-handlebars-template').
      <h2>oAuth info</h2>
      <dl class="dl-horizontal">
      <dt>Access token</dt><dd class="text-overflow">{{access_token}}</dd>
      <dt>Refresh token</dt><dd class="text-overflow">{{refresh_token}}></dd>
      </dl>
    script(src='//cdnjs.cloudflare.com/ajax/libs/handlebars.js/2.0.0-alpha.1/handlebars.min.js')
    script(src='http://code.jquery.com/jquery-1.10.1.min.js')
    script.
      (function() {
      /**
      * Obtains parameters from the hash of the URL
      * @return Object
      */
      function getHashParams() {
      var hashParams = {};
      var e, r = /([^&;=]+)=?([^&;]*)/g,
      q = window.location.hash.substring(1);
      while ( e = r.exec(q)) {
      hashParams[e[1]] = decodeURIComponent(e[2]);
      }
      return hashParams;
      }
      var userProfileSource = document.getElementById('user-profile-template').innerHTML,
      userProfileTemplate = Handlebars.compile(userProfileSource),
      userProfilePlaceholder = document.getElementById('user-profile');
      var oauthSource = document.getElementById('oauth-template').innerHTML,
      oauthTemplate = Handlebars.compile(oauthSource),
      oauthPlaceholder = document.getElementById('oauth');
      var params = getHashParams();
      var access_token = params.access_token,
      refresh_token = params.refresh_token,
      error = params.error;
      if (error) {
      alert('There was an error during the authentication');
      } else {
      if (access_token) {
      // render oauth info
      oauthPlaceholder.innerHTML = oauthTemplate({
      access_token: access_token,
      refresh_token: refresh_token
      });
      $.ajax({
      url: 'https://api.spotify.com/v1/me',
      headers: {
      'Authorization': 'Bearer ' + access_token
      },
      success: function(response) {
      userProfilePlaceholder.innerHTML = userProfileTemplate(response);
      $('#login').hide();
      $('#loggedin').show();
      }
      });
      } else {
      // render initial screen
      $('#login').show();
      $('#loggedin').hide();
      }
      document.getElementById('obtain-new-token').addEventListener('click', function() {
      $.ajax({
      url: '/refresh_token',
      data: {
      'refresh_token': refresh_token
      }
      }).done(function(data) {
      access_token = data.access_token;
      oauthPlaceholder.innerHTML = oauthTemplate({
      access_token: access_token,
      refresh_token: refresh_token
      });
      });
      }, false);
      }
      })();
    input#getval(type='file')
    br
    br
    #clock
    style.
      #clock{
      background-image:url('');
      background-size:cover;
      background-position: center;
      height: 150px; width: 150px;
      border: 1px solid #bbb;
      }
      .scrollableTextBox{
      display:none;
      height:80px;
      width:200px;
      font-family: Verdana, Tahoma, Arial, Helvetica, sans-serif;
      font-size: 82%;
      overflow:scroll;
      }
    script.
      document.getElementById('getval').addEventListener('change', readURL, true);
      function readURL(){
      var file = document.getElementById("getval").files[0];
      var reader = new FileReader();
      var imagebytes = null;
      reader.onloadend = function(){
      document.getElementById('clock').style.backgroundImage = "url(" + reader.result + ")";
      imagebytes = reader.result
      imagebytes = imagebytes.substring(23,imagebytes.count)
      document.getElementById("imageBytesDisplay").value = imagebytes
      }
      if(file){
      reader.readAsDataURL(file);
      }else{
      }
      }
    form(action='/searchByBytes', method='post')
      .form-group
        label Base64 Image Bytes
        input#imageBytesDisplay.scrollableTextBox(type='textarea', name='imageBytes')
        br
        br
        button#bytesSearch.btn.cyan.btn-warning.btn-lg(type='submit') Search
    style.
